package frame;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import entity.User;
import service.UserService;
import service.UserServiceImpl;
import util.Constants;
import util.SwingUtil;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.*;

/**
 * <h1>登录界面类</h1>
 *
 * <p>通过 Idea 的 GUI Designer 插件生成布局代码</p>
 * <p>使用了 Idea 的第三方库</p>
 *
 * @author: wjl
 * @date: 2022/1/8 16:20
 * @version: v1.0
 */
public class LoginFrame extends JFrame {

    // 手动注入用户类服务接口提供类
    private final UserService userService = new UserServiceImpl();

    private JPanel pane;                  // 主面板（包括标题面板、标题面板和按钮面板）
    ///////////////////////////////////////////////////////////////////////////
    private JPanel titlePane;             // 标题面板（存放标题标签）
    private JLabel titleLabel;            // 标题标签（程序名）
    ///////////////////////////////////////////////////////////////////////////
    private JPanel inputPane;             // 标题面板（存放信息输入框）
    private JLabel usernameLabel;         // 用户名标签（用户名）
    private JTextField username;          // 用户名输入框
    private JLabel usernameAlert;         // 用户名检验
    private JLabel passwordLabel;         // 密码标签（密码）
    private JPasswordField password;      // 密码输入框
    private JLabel passwordAlert;         // 密码校验
    ///////////////////////////////////////////////////////////////////////////
    private JPanel buttonPane;            // 按钮面板（存放登录、注册按钮）
    private JButton loginButton;          // 登录按钮
    private JButton registerButton;       // 注册按钮

    public LoginFrame() {
        // generated by GUI designer
        pane = new JPanel();
        pane.setLayout(new GridLayoutManager(3, 1, new Insets(10, 10, 10, 10), -1, -1));
        pane.setPreferredSize(new Dimension(400, 250));
        titlePane = new JPanel();
        titlePane.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        pane.add(titlePane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        titleLabel = new JLabel();
        Font titleFont = SwingUtil.getFont(null, -1, 26, titleLabel.getFont());
        if (titleFont != null) titleLabel.setFont(titleFont);
        titleLabel.setText(Constants.NAME);
        titlePane.add(titleLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        inputPane = new JPanel();
        inputPane.setLayout(new GridLayoutManager(4, 2, new Insets(0, 20, 0, 20), -1, -1));
        pane.add(inputPane, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(-1, 80), null, 0, false));
        username = new JTextField();
        inputPane.add(username, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 25), null, 0, false));
        password = new JPasswordField();
        inputPane.add(password, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 25), null, 0, false));
        usernameLabel = new JLabel();
        usernameLabel.setText("用户名");
        inputPane.add(usernameLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passwordLabel = new JLabel();
        passwordLabel.setText("密码");
        inputPane.add(passwordLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        usernameAlert = new JLabel();
        usernameAlert.setForeground(new Color(-693140));
        usernameAlert.setText("Label");
        inputPane.add(usernameAlert, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 15), null, 0, false));
        passwordAlert = new JLabel();
        passwordAlert.setForeground(new Color(-693140));
        passwordAlert.setText("Label");
        inputPane.add(passwordAlert, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 15), null, 0, false));
        buttonPane = new JPanel();
        buttonPane.setLayout(new GridLayoutManager(1, 2, new Insets(0, 10, 0, 10), -1, -1));
        pane.add(buttonPane, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        loginButton = new JButton();
        loginButton.setText("登录");
        buttonPane.add(loginButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 30), null, 0, false));
        registerButton = new JButton();
        registerButton.setText("注册");
        buttonPane.add(registerButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 30), null, 0, false));

        // 添加事件侦听器
        usernameAlert.setText("");
        username.getDocument().addDocumentListener(new UsernameListener());
        passwordAlert.setText("");
        password.getDocument().addDocumentListener(new PasswordListener());
    }

    /**
     * 用户名输入侦听器
     */
    class UsernameListener implements DocumentListener {
        @Override
        public void insertUpdate(DocumentEvent e) {
            warn();
        }
        @Override
        public void removeUpdate(DocumentEvent e) {
            warn();
        }
        @Override
        public void changedUpdate(DocumentEvent e) {
            warn();
        }
        public synchronized void warn() {
            if (username.getText().equals("")) {
                usernameAlert.setText("用户名不能为空");
            } else if (null == userService.findUserByUsername(username.getText())) {
                usernameAlert.setText("用户名不存在");
            } else {
                usernameAlert.setText("");
            }
        }
    }

    /**
     * 密码输入侦听器
     */
    class PasswordListener implements DocumentListener {
        @Override
        public void insertUpdate(DocumentEvent e) {
            warn();
        }
        @Override
        public void removeUpdate(DocumentEvent e) {
            warn();
        }
        @Override
        public void changedUpdate(DocumentEvent e) {
            warn();
        }
        public synchronized void warn() {
            User user = userService.findUserByUsername(username.getText());
            if (null == user) {
                usernameAlert.setText("用户名不能为空");
            } else {
                passwordAlert.setText("");
            }
        }
    }

    /**
     * 清空所有输入框中的内容
     */
    public void clearAllInput() {
        username.setText("");
        usernameAlert.setText("");
        password.setText("");
        passwordAlert.setText("");
    }

    public JButton getLoginButton() {
        return loginButton;
    }

    public void setLoginButton(JButton loginButton) {
        this.loginButton = loginButton;
    }

    public JButton getRegisterButton() {
        return registerButton;
    }

    public void setRegisterButton(JButton registerButton) {
        this.registerButton = registerButton;
    }

    public JTextField getUsername() {
        return username;
    }

    public void setUsername(JTextField username) {
        this.username = username;
    }

    public JPasswordField getPassword() {
        return password;
    }

    public void setPassword(JPasswordField password) {
        this.password = password;
    }

    public JLabel getTitleLabel() {
        return titleLabel;
    }

    public void setTitleLabel(JLabel titleLabel) {
        this.titleLabel = titleLabel;
    }

    public JPanel getPane() {
        return pane;
    }

    public void setPane(JPanel pane) {
        this.pane = pane;
    }

    public JPanel getInputPane() {
        return inputPane;
    }

    public void setInputPane(JPanel inputPane) {
        this.inputPane = inputPane;
    }

    public JLabel getUsernameLabel() {
        return usernameLabel;
    }

    public void setUsernameLabel(JLabel usernameLabel) {
        this.usernameLabel = usernameLabel;
    }

    public JLabel getPasswordLabel() {
        return passwordLabel;
    }

    public void setPasswordLabel(JLabel passwordLabel) {
        this.passwordLabel = passwordLabel;
    }

    public JLabel getUsernameAlert() {
        return usernameAlert;
    }

    public void setUsernameAlert(JLabel usernameAlert) {
        this.usernameAlert = usernameAlert;
    }

    public JLabel getPasswordAlert() {
        return passwordAlert;
    }

    public void setPasswordAlert(JLabel passwordAlert) {
        this.passwordAlert = passwordAlert;
    }

    public JPanel getTitlePane() {
        return titlePane;
    }

    public void setTitlePane(JPanel titlePane) {
        this.titlePane = titlePane;
    }

    public JPanel getButtonPane() {
        return buttonPane;
    }

    public void setButtonPane(JPanel buttonPane) {
        this.buttonPane = buttonPane;
    }

}
